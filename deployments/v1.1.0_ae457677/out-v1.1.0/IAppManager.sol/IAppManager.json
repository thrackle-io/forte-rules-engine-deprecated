{"abi":[{"type":"function","name":"approveAddressToTradingRuleAllowlist","inputs":[{"name":"_address","type":"address","internalType":"address"},{"name":"isApproved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"checkApplicationRules","inputs":[{"name":"_tokenAddress","type":"address","internalType":"address"},{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"},{"name":"_nftValuationLimit","type":"uint16","internalType":"uint16"},{"name":"_tokenId","type":"uint256","internalType":"uint256"},{"name":"_action","type":"uint8","internalType":"enum ActionTypes"},{"name":"_handlerType","type":"uint8","internalType":"enum HandlerTypes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"confirmNewDataProvider","inputs":[{"name":"_providerType","type":"uint8","internalType":"enum IDataModule.ProviderType"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deRegisterAMM","inputs":[{"name":"_AMMAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterToken","inputs":[{"name":"_tokenId","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAccessLevel","inputs":[{"name":"_account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getAccessLevelProvider","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getAllTags","inputs":[{"name":"_address","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getPauseRules","inputs":[],"outputs":[{"name":"","type":"tuple[]","internalType":"struct PauseRule[]","components":[{"name":"pauseStart","type":"uint64","internalType":"uint64"},{"name":"pauseStop","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"getRiskScore","inputs":[{"name":"_account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getTokenID","inputs":[{"name":"_tokenAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getTokenList","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"hasTag","inputs":[{"name":"_account","type":"address","internalType":"address"},{"name":"_tag","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isAccessLevelAdmin","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isAppAdministrator","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isRegisteredAMM","inputs":[{"name":"_AMMAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isRiskAdmin","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isRuleAdministrator","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isRuleBypassAccount","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isSuperAdmin","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isTradingRuleBypasser","inputs":[{"name":"_address","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isTreasury","inputs":[{"name":"_treasuryAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"registerAMM","inputs":[{"name":"_AMMAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerToken","inputs":[{"name":"_tokenId","type":"string","internalType":"string"},{"name":"_tokenAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"error","name":"AddressAlreadyRegistered","inputs":[]},{"type":"error","name":"AdminMinTokenBalanceisActive","inputs":[]},{"type":"error","name":"AppManagerNotConnected","inputs":[]},{"type":"error","name":"BelowMinAdminThreshold","inputs":[]},{"type":"error","name":"CantMixPeriodicAndNonPeriodic","inputs":[]},{"type":"error","name":"ConfirmerDoesNotMatchProposedAddress","inputs":[]},{"type":"error","name":"IndexOutOfRange","inputs":[]},{"type":"error","name":"InputArraysMustHaveSameLength","inputs":[]},{"type":"error","name":"InputArraysSizesNotValid","inputs":[]},{"type":"error","name":"InvalidOracleType","inputs":[{"name":"_type","type":"uint8","internalType":"uint8"}]},{"type":"error","name":"InvalidRuleInput","inputs":[]},{"type":"error","name":"InvertedLimits","inputs":[]},{"type":"error","name":"NoAddressToRemove","inputs":[]},{"type":"error","name":"NoProposalHasBeenMade","inputs":[]},{"type":"error","name":"NotAUser","inputs":[{"name":"_address","type":"address","internalType":"address"}]},{"type":"error","name":"NotAccessLevelAdministrator","inputs":[{"name":"_address","type":"address","internalType":"address"}]},{"type":"error","name":"NotAppAdministrator","inputs":[]},{"type":"error","name":"NotAppAdministratorOrOwner","inputs":[]},{"type":"error","name":"NotRegisteredHandler","inputs":[{"name":"","type":"address","internalType":"address"}]},{"type":"error","name":"NotRiskAdmin","inputs":[{"name":"_address","type":"address","internalType":"address"}]},{"type":"error","name":"NotRuleAdministrator","inputs":[]},{"type":"error","name":"NotSuperAdmin","inputs":[{"name":"","type":"address","internalType":"address"}]},{"type":"error","name":"PricingModuleNotConfigured","inputs":[{"name":"_erc20PricingAddress","type":"address","internalType":"address"},{"name":"nftPricingAddress","type":"address","internalType":"address"}]},{"type":"error","name":"ValueOutOfRange","inputs":[{"name":"_value","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"WrongArrayOrder","inputs":[]},{"type":"error","name":"ZeroAddress","inputs":[]},{"type":"error","name":"ZeroValueNotPermited","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"approveAddressToTradingRuleAllowlist(address,bool)":"25ed7d4a","checkApplicationRules(address,address,address,uint256,uint16,uint256,uint8,uint8)":"f142a46f","confirmNewDataProvider(uint8)":"2b124b79","deRegisterAMM(address)":"6db4a9c9","deregisterToken(string)":"7bdc8bbf","getAccessLevel(address)":"5bc008a0","getAccessLevelProvider()":"b1b65c35","getAllTags(address)":"cc812f3a","getPauseRules()":"d4f93870","getRiskScore(address)":"dc08706d","getTokenID(address)":"63f8071c","getTokenList()":"273cbaa0","hasTag(address,bytes32)":"d019577a","isAccessLevelAdmin(address)":"41b77fff","isAppAdministrator(address)":"c3c2ebbb","isRegisteredAMM(address)":"9a4e34ba","isRiskAdmin(address)":"674b5e4d","isRuleAdministrator(address)":"d4a7db7f","isRuleBypassAccount(address)":"7069e99f","isSuperAdmin(address)":"df7f453b","isTradingRuleBypasser(address)":"be4eb0c7","isTreasury(address)":"516f0a1b","registerAMM(address)":"da517b67","registerToken(string,address)":"69f667ed"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AddressAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AdminMinTokenBalanceisActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AppManagerNotConnected\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BelowMinAdminThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CantMixPeriodicAndNonPeriodic\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ConfirmerDoesNotMatchProposedAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IndexOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArraysMustHaveSameLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArraysSizesNotValid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"InvalidOracleType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRuleInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvertedLimits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoAddressToRemove\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoProposalHasBeenMade\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"NotAUser\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"NotAccessLevelAdministrator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAppAdministrator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAppAdministratorOrOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NotRegisteredHandler\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"NotRiskAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotRuleAdministrator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"NotSuperAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20PricingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftPricingAddress\",\"type\":\"address\"}],\"name\":\"PricingModuleNotConfigured\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ValueOutOfRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WrongArrayOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroValueNotPermited\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"approveAddressToTradingRuleAllowlist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"_nftValuationLimit\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"enum ActionTypes\",\"name\":\"_action\",\"type\":\"uint8\"},{\"internalType\":\"enum HandlerTypes\",\"name\":\"_handlerType\",\"type\":\"uint8\"}],\"name\":\"checkApplicationRules\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IDataModule.ProviderType\",\"name\":\"_providerType\",\"type\":\"uint8\"}],\"name\":\"confirmNewDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_AMMAddress\",\"type\":\"address\"}],\"name\":\"deRegisterAMM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenId\",\"type\":\"string\"}],\"name\":\"deregisterToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAccessLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAccessLevelProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAllTags\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPauseRules\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"pauseStart\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"pauseStop\",\"type\":\"uint64\"}],\"internalType\":\"struct PauseRule[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getRiskScore\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_tag\",\"type\":\"bytes32\"}],\"name\":\"hasTag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccessLevelAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAppAdministrator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_AMMAddress\",\"type\":\"address\"}],\"name\":\"isRegisteredAMM\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRiskAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRuleAdministrator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRuleBypassAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isSuperAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isTradingRuleBypasser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasuryAddress\",\"type\":\"address\"}],\"name\":\"isTreasury\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_AMMAddress\",\"type\":\"address\"}],\"name\":\"registerAMM\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"registerToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@ShaneDuncan602, @oscarsernarosero, @TJ-Everett\",\"details\":\"This interface is a lightweight counterpart to AppManager. It should be used by calling contracts that only need inquiry actions\",\"kind\":\"dev\",\"methods\":{\"approveAddressToTradingRuleAllowlist(address,bool)\":{\"details\":\"manage the allowlist for trading-rule bypasser accounts\",\"params\":{\"_address\":\"account in the list to manage\",\"isApproved\":\"set to true to indicate that _address can bypass trading rules.\"}},\"checkApplicationRules(address,address,address,uint256,uint16,uint256,uint8,uint8)\":{\"details\":\"Jump through to the gobal rules to see if the requested action is valid.\",\"params\":{\"_action\":\"Action to be checked\",\"_amount\":\"amount of tokens to be transferred \",\"_from\":\"address of the from account\",\"_handlerType\":\"type of handler calling checkApplicationRules function \",\"_nftValuationLimit\":\"number of tokenID's per collection before checking collection price vs individual token price\",\"_to\":\"address of the to account\",\"_tokenAddress\":\"address of the token calling the rule check \",\"_tokenId\":\"tokenId of the NFT token \"}},\"confirmNewDataProvider(uint8)\":{\"details\":\"Part of the two step process to set a new Data Provider within a Protocol AppManager. Final confirmation called by new provider\",\"params\":{\"_providerType\":\"the type of data provider\"}},\"deRegisterAMM(address)\":{\"details\":\"This function allows the devs to deregister an AMM contract address.\",\"params\":{\"_AMMAddress\":\"The address of the AMM to be de-registered\"}},\"deregisterToken(string)\":{\"details\":\"This function allows the devs to deregister a token contract address. This keeps everything in sync and will aid with the token factory\",\"params\":{\"_tokenId\":\"The token id(may be NFT or ERC20)\"}},\"getAccessLevel(address)\":{\"details\":\"Get the AccessLevel Score for the specified account\",\"params\":{\"_account\":\"address of the user\"},\"returns\":{\"_0\":\"\"}},\"getAccessLevelProvider()\":{\"details\":\"Get the address of the access level provider\",\"returns\":{\"_0\":\"accessLevelProvider Address of the access level provider\"}},\"getAllTags(address)\":{\"details\":\"Get all the tags for the address\",\"params\":{\"_address\":\"Address to retrieve the tags\"},\"returns\":{\"_0\":\"tags Array of all tags for the account\"}},\"getPauseRules()\":{\"details\":\"Get all pause rules for the token\",\"returns\":{\"_0\":\"PauseRule An array of all the pause rules\"}},\"getRiskScore(address)\":{\"details\":\"Get the Risk Score for an account.\",\"params\":{\"_account\":\"address upon which the risk score was set\"},\"returns\":{\"_0\":\"score risk score(0-100)\"}},\"getTokenID(address)\":{\"details\":\"This function gets token identification string.\",\"params\":{\"_tokenAddress\":\"the address of the contract of the token to query\"},\"returns\":{\"_0\":\"the identification string.\"}},\"getTokenList()\":{\"details\":\"Return a the token list for calculation purposes\",\"returns\":{\"_0\":\"tokenList list of all tokens registered\"}},\"hasTag(address,bytes32)\":{\"details\":\"Check to see if an account has a specific general tag\",\"params\":{\"_account\":\"Address to check\",\"_tag\":\"Tag to be checked for\"},\"returns\":{\"_0\":\"success true if account has the tag, false if it does not\"}},\"isAccessLevelAdmin(address)\":{\"details\":\"This function is where the access level admin role is actually checked\",\"params\":{\"account\":\"address to be checked\"},\"returns\":{\"_0\":\"success true if ACCESS_LEVEL_ADMIN_ROLE, false if not\"}},\"isAppAdministrator(address)\":{\"details\":\"This function is where the app administrator role is actually checked\",\"params\":{\"account\":\"address to be checked\"},\"returns\":{\"_0\":\"success true if app administrator, false if not\"}},\"isRegisteredAMM(address)\":{\"details\":\"This function allows the devs to register their AMM contract addresses. This will allow for token level rule exemptions\",\"params\":{\"_AMMAddress\":\"Address for the AMM\"}},\"isRiskAdmin(address)\":{\"details\":\"This function is where the risk admin role is actually checked\",\"params\":{\"account\":\"address to be checked\"},\"returns\":{\"_0\":\"success true if RISK_ADMIN_ROLE, false if not\"}},\"isRuleAdministrator(address)\":{\"details\":\"This function is where the rule administrator role is actually checked\",\"params\":{\"account\":\"address to be checked\"},\"returns\":{\"_0\":\"success true if rule administrator, false if not\"}},\"isRuleBypassAccount(address)\":{\"details\":\"This function is where the rule bypass account role is actually checked\",\"params\":{\"account\":\"address to be checked\"},\"returns\":{\"_0\":\"success true if RULE_BYPASS_ACCOUNT, false if not\"}},\"isSuperAdmin(address)\":{\"details\":\"This function is where the super admin role is actually checked\",\"params\":{\"account\":\"address to be checked\"},\"returns\":{\"_0\":\"success true if admin, false if not\"}},\"isTradingRuleBypasser(address)\":{\"details\":\"tells if an address can bypass trading rules\",\"params\":{\"_address\":\"the address to check for\"},\"returns\":{\"_0\":\"true if the address can bypass trading rules, or false otherwise.\"}},\"isTreasury(address)\":{\"details\":\"This function allows the devs to register their treasury addresses. This will allow for token level rule exemptions\",\"params\":{\"_treasuryAddress\":\"Address for the treasury\"}},\"registerAMM(address)\":{\"details\":\"This function allows the devs to register their AMM contract addresses. This will allow for token level rule exemptions\",\"params\":{\"_AMMAddress\":\"Address for the AMM to be registered\"}},\"registerToken(string,address)\":{\"details\":\"This function allows the devs to register their token contract addresses. This keeps everything in sync and will aid with the token factory\",\"params\":{\"_tokenAddress\":\"Address corresponding to the tokenId\",\"_tokenId\":\"The token id(may be NFT or ERC20)\"}}},\"title\":\"App Manager Inquiry Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Interface for app manager server functions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/client/application/IAppManager.sol\":\"IAppManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":diamond-std/=lib/diamond-std/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"src/client/application/IAppManager.sol\":{\"keccak256\":\"0x8ccd1d0385deb9bd49bdeff1d3971de82a230318b2f19adeb6dfe89a0e36e43b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bd64486136d83e353998aa19828549b6b1191ad954c68cf4104c03790a84011f\",\"dweb:/ipfs/QmWEJpRZV4wFjUHTDLGueSha1u7zhA24GssegQSDwYwCCa\"]},\"src/client/application/data/IDataModule.sol\":{\"keccak256\":\"0x4ea1988b3ed3868a11131a88a2f05c4896f61e195f637febe3599df04ff06f0e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c3ae367426e19f3e3c6482e0341705a298f7d567a117846a225f9a3c5138f7fd\",\"dweb:/ipfs/QmY1wzYxHFSd2rYwpMYpTMjZYBgdNqVmcJDWS9nXWKAUBM\"]},\"src/client/application/data/IPauseRules.sol\":{\"keccak256\":\"0x81f100df2eb9b3ace882ed18ecdd3e5eb3a7de7c93ae1b59eed962ae1c2c8b2f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://aa095c081b71b3d1154697e41d2710371774ad9ff7011844566880d2df6ed953\",\"dweb:/ipfs/QmPE8o31MNYZCTjujTq8cQAdSNh4Xm55akqtnwJzh5f4HX\"]},\"src/client/application/data/PauseRule.sol\":{\"keccak256\":\"0x8ed8dc13993e2a91d152cc246fef16ad5015e99c35c7c597818d6636e09f617d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8cbba066c60368942f24ffd6f0eeae125f7a31d3666bdcb353b4b295d1cdfd36\",\"dweb:/ipfs/QmNkLpA6cjipNqJ46YnRkMFNvhLuW8mwj5G2TWZjxGqv8m\"]},\"src/client/token/HandlerTypeEnum.sol\":{\"keccak256\":\"0x5f5d6eb1878743a3eab3be0bf571049238c79bef79590c7504c7e6b3023a317d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47749c098fbb76022e1af514ff582e61f72abcfa40a0a2082a9468ac1f6e7446\",\"dweb:/ipfs/QmWVHqH6BGVrE9nxGiMqsvwi8EMXQaDirVLHqNkH3fCZfY\"]},\"src/common/ActionEnum.sol\":{\"keccak256\":\"0xf8fe73530657e33e73d4b86f10de47feb784dbb9c2b135c54de9a20ed2106bd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e013dd5adb2c8796cb2693d5e9361cb26aa62f6c5b1563c096a47a479db8de0d\",\"dweb:/ipfs/QmTEC2wEPmDi6TjYbNkPksDYLptfd7sppXyygAwfdDdhLN\"]},\"src/common/IErrors.sol\":{\"keccak256\":\"0xdd37b7b2596b229bbc44eba264a0759b60cef071939b3e0327416452a5278e9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cd4164e43f1b5e6a41a92a2764e0a7c9b09e159b8bf016fa9442199cda3f606\",\"dweb:/ipfs/QmQkQH1Vg5a93wTDcFmiQauCTuXPRuWo2hygQymGj6cwkf\"]},\"src/common/IEvents.sol\":{\"keccak256\":\"0x3d5f8db840075d593987d63e5d67b1108280c902041b5b471a1f31612dcdd269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45ecb629ca134e26b040b68688e057c10356812183fbacbd37109e1d92d69467\",\"dweb:/ipfs/QmQU7oCJKdM87Q6kw4kx9T5UkpZXsQ8eY26BQ1ozrmS3ki\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AddressAlreadyRegistered"},{"inputs":[],"type":"error","name":"AdminMinTokenBalanceisActive"},{"inputs":[],"type":"error","name":"AppManagerNotConnected"},{"inputs":[],"type":"error","name":"BelowMinAdminThreshold"},{"inputs":[],"type":"error","name":"CantMixPeriodicAndNonPeriodic"},{"inputs":[],"type":"error","name":"ConfirmerDoesNotMatchProposedAddress"},{"inputs":[],"type":"error","name":"IndexOutOfRange"},{"inputs":[],"type":"error","name":"InputArraysMustHaveSameLength"},{"inputs":[],"type":"error","name":"InputArraysSizesNotValid"},{"inputs":[{"internalType":"uint8","name":"_type","type":"uint8"}],"type":"error","name":"InvalidOracleType"},{"inputs":[],"type":"error","name":"InvalidRuleInput"},{"inputs":[],"type":"error","name":"InvertedLimits"},{"inputs":[],"type":"error","name":"NoAddressToRemove"},{"inputs":[],"type":"error","name":"NoProposalHasBeenMade"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"type":"error","name":"NotAUser"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"type":"error","name":"NotAccessLevelAdministrator"},{"inputs":[],"type":"error","name":"NotAppAdministrator"},{"inputs":[],"type":"error","name":"NotAppAdministratorOrOwner"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"type":"error","name":"NotRegisteredHandler"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"type":"error","name":"NotRiskAdmin"},{"inputs":[],"type":"error","name":"NotRuleAdministrator"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"type":"error","name":"NotSuperAdmin"},{"inputs":[{"internalType":"address","name":"_erc20PricingAddress","type":"address"},{"internalType":"address","name":"nftPricingAddress","type":"address"}],"type":"error","name":"PricingModuleNotConfigured"},{"inputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"type":"error","name":"ValueOutOfRange"},{"inputs":[],"type":"error","name":"WrongArrayOrder"},{"inputs":[],"type":"error","name":"ZeroAddress"},{"inputs":[],"type":"error","name":"ZeroValueNotPermited"},{"inputs":[{"internalType":"address","name":"_address","type":"address"},{"internalType":"bool","name":"isApproved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"approveAddressToTradingRuleAllowlist"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"uint16","name":"_nftValuationLimit","type":"uint16"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"enum ActionTypes","name":"_action","type":"uint8"},{"internalType":"enum HandlerTypes","name":"_handlerType","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"checkApplicationRules"},{"inputs":[{"internalType":"enum IDataModule.ProviderType","name":"_providerType","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"confirmNewDataProvider"},{"inputs":[{"internalType":"address","name":"_AMMAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"deRegisterAMM"},{"inputs":[{"internalType":"string","name":"_tokenId","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deregisterToken"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"stateMutability":"view","type":"function","name":"getAccessLevel","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getAccessLevelProvider","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"stateMutability":"view","type":"function","name":"getAllTags","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPauseRules","outputs":[{"internalType":"struct PauseRule[]","name":"","type":"tuple[]","components":[{"internalType":"uint64","name":"pauseStart","type":"uint64"},{"internalType":"uint64","name":"pauseStop","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"stateMutability":"view","type":"function","name":"getRiskScore","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"}],"stateMutability":"view","type":"function","name":"getTokenID","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getTokenList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"bytes32","name":"_tag","type":"bytes32"}],"stateMutability":"view","type":"function","name":"hasTag","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isAccessLevelAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isAppAdministrator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_AMMAddress","type":"address"}],"stateMutability":"view","type":"function","name":"isRegisteredAMM","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isRiskAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isRuleAdministrator","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isRuleBypassAccount","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isSuperAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"stateMutability":"view","type":"function","name":"isTradingRuleBypasser","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_treasuryAddress","type":"address"}],"stateMutability":"view","type":"function","name":"isTreasury","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_AMMAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"registerAMM"},{"inputs":[{"internalType":"string","name":"_tokenId","type":"string"},{"internalType":"address","name":"_tokenAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"registerToken"}],"devdoc":{"kind":"dev","methods":{"approveAddressToTradingRuleAllowlist(address,bool)":{"details":"manage the allowlist for trading-rule bypasser accounts","params":{"_address":"account in the list to manage","isApproved":"set to true to indicate that _address can bypass trading rules."}},"checkApplicationRules(address,address,address,uint256,uint16,uint256,uint8,uint8)":{"details":"Jump through to the gobal rules to see if the requested action is valid.","params":{"_action":"Action to be checked","_amount":"amount of tokens to be transferred ","_from":"address of the from account","_handlerType":"type of handler calling checkApplicationRules function ","_nftValuationLimit":"number of tokenID's per collection before checking collection price vs individual token price","_to":"address of the to account","_tokenAddress":"address of the token calling the rule check ","_tokenId":"tokenId of the NFT token "}},"confirmNewDataProvider(uint8)":{"details":"Part of the two step process to set a new Data Provider within a Protocol AppManager. Final confirmation called by new provider","params":{"_providerType":"the type of data provider"}},"deRegisterAMM(address)":{"details":"This function allows the devs to deregister an AMM contract address.","params":{"_AMMAddress":"The address of the AMM to be de-registered"}},"deregisterToken(string)":{"details":"This function allows the devs to deregister a token contract address. This keeps everything in sync and will aid with the token factory","params":{"_tokenId":"The token id(may be NFT or ERC20)"}},"getAccessLevel(address)":{"details":"Get the AccessLevel Score for the specified account","params":{"_account":"address of the user"},"returns":{"_0":""}},"getAccessLevelProvider()":{"details":"Get the address of the access level provider","returns":{"_0":"accessLevelProvider Address of the access level provider"}},"getAllTags(address)":{"details":"Get all the tags for the address","params":{"_address":"Address to retrieve the tags"},"returns":{"_0":"tags Array of all tags for the account"}},"getPauseRules()":{"details":"Get all pause rules for the token","returns":{"_0":"PauseRule An array of all the pause rules"}},"getRiskScore(address)":{"details":"Get the Risk Score for an account.","params":{"_account":"address upon which the risk score was set"},"returns":{"_0":"score risk score(0-100)"}},"getTokenID(address)":{"details":"This function gets token identification string.","params":{"_tokenAddress":"the address of the contract of the token to query"},"returns":{"_0":"the identification string."}},"getTokenList()":{"details":"Return a the token list for calculation purposes","returns":{"_0":"tokenList list of all tokens registered"}},"hasTag(address,bytes32)":{"details":"Check to see if an account has a specific general tag","params":{"_account":"Address to check","_tag":"Tag to be checked for"},"returns":{"_0":"success true if account has the tag, false if it does not"}},"isAccessLevelAdmin(address)":{"details":"This function is where the access level admin role is actually checked","params":{"account":"address to be checked"},"returns":{"_0":"success true if ACCESS_LEVEL_ADMIN_ROLE, false if not"}},"isAppAdministrator(address)":{"details":"This function is where the app administrator role is actually checked","params":{"account":"address to be checked"},"returns":{"_0":"success true if app administrator, false if not"}},"isRegisteredAMM(address)":{"details":"This function allows the devs to register their AMM contract addresses. This will allow for token level rule exemptions","params":{"_AMMAddress":"Address for the AMM"}},"isRiskAdmin(address)":{"details":"This function is where the risk admin role is actually checked","params":{"account":"address to be checked"},"returns":{"_0":"success true if RISK_ADMIN_ROLE, false if not"}},"isRuleAdministrator(address)":{"details":"This function is where the rule administrator role is actually checked","params":{"account":"address to be checked"},"returns":{"_0":"success true if rule administrator, false if not"}},"isRuleBypassAccount(address)":{"details":"This function is where the rule bypass account role is actually checked","params":{"account":"address to be checked"},"returns":{"_0":"success true if RULE_BYPASS_ACCOUNT, false if not"}},"isSuperAdmin(address)":{"details":"This function is where the super admin role is actually checked","params":{"account":"address to be checked"},"returns":{"_0":"success true if admin, false if not"}},"isTradingRuleBypasser(address)":{"details":"tells if an address can bypass trading rules","params":{"_address":"the address to check for"},"returns":{"_0":"true if the address can bypass trading rules, or false otherwise."}},"isTreasury(address)":{"details":"This function allows the devs to register their treasury addresses. This will allow for token level rule exemptions","params":{"_treasuryAddress":"Address for the treasury"}},"registerAMM(address)":{"details":"This function allows the devs to register their AMM contract addresses. This will allow for token level rule exemptions","params":{"_AMMAddress":"Address for the AMM to be registered"}},"registerToken(string,address)":{"details":"This function allows the devs to register their token contract addresses. This keeps everything in sync and will aid with the token factory","params":{"_tokenAddress":"Address corresponding to the tokenId","_tokenId":"The token id(may be NFT or ERC20)"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","diamond-std/=lib/diamond-std/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/client/application/IAppManager.sol":"IAppManager"},"evmVersion":"paris","libraries":{}},"sources":{"src/client/application/IAppManager.sol":{"keccak256":"0x8ccd1d0385deb9bd49bdeff1d3971de82a230318b2f19adeb6dfe89a0e36e43b","urls":["bzz-raw://bd64486136d83e353998aa19828549b6b1191ad954c68cf4104c03790a84011f","dweb:/ipfs/QmWEJpRZV4wFjUHTDLGueSha1u7zhA24GssegQSDwYwCCa"],"license":"UNLICENSED"},"src/client/application/data/IDataModule.sol":{"keccak256":"0x4ea1988b3ed3868a11131a88a2f05c4896f61e195f637febe3599df04ff06f0e","urls":["bzz-raw://c3ae367426e19f3e3c6482e0341705a298f7d567a117846a225f9a3c5138f7fd","dweb:/ipfs/QmY1wzYxHFSd2rYwpMYpTMjZYBgdNqVmcJDWS9nXWKAUBM"],"license":"UNLICENSED"},"src/client/application/data/IPauseRules.sol":{"keccak256":"0x81f100df2eb9b3ace882ed18ecdd3e5eb3a7de7c93ae1b59eed962ae1c2c8b2f","urls":["bzz-raw://aa095c081b71b3d1154697e41d2710371774ad9ff7011844566880d2df6ed953","dweb:/ipfs/QmPE8o31MNYZCTjujTq8cQAdSNh4Xm55akqtnwJzh5f4HX"],"license":"UNLICENSED"},"src/client/application/data/PauseRule.sol":{"keccak256":"0x8ed8dc13993e2a91d152cc246fef16ad5015e99c35c7c597818d6636e09f617d","urls":["bzz-raw://8cbba066c60368942f24ffd6f0eeae125f7a31d3666bdcb353b4b295d1cdfd36","dweb:/ipfs/QmNkLpA6cjipNqJ46YnRkMFNvhLuW8mwj5G2TWZjxGqv8m"],"license":"UNLICENSED"},"src/client/token/HandlerTypeEnum.sol":{"keccak256":"0x5f5d6eb1878743a3eab3be0bf571049238c79bef79590c7504c7e6b3023a317d","urls":["bzz-raw://47749c098fbb76022e1af514ff582e61f72abcfa40a0a2082a9468ac1f6e7446","dweb:/ipfs/QmWVHqH6BGVrE9nxGiMqsvwi8EMXQaDirVLHqNkH3fCZfY"],"license":"MIT"},"src/common/ActionEnum.sol":{"keccak256":"0xf8fe73530657e33e73d4b86f10de47feb784dbb9c2b135c54de9a20ed2106bd7","urls":["bzz-raw://e013dd5adb2c8796cb2693d5e9361cb26aa62f6c5b1563c096a47a479db8de0d","dweb:/ipfs/QmTEC2wEPmDi6TjYbNkPksDYLptfd7sppXyygAwfdDdhLN"],"license":"MIT"},"src/common/IErrors.sol":{"keccak256":"0xdd37b7b2596b229bbc44eba264a0759b60cef071939b3e0327416452a5278e9d","urls":["bzz-raw://9cd4164e43f1b5e6a41a92a2764e0a7c9b09e159b8bf016fa9442199cda3f606","dweb:/ipfs/QmQkQH1Vg5a93wTDcFmiQauCTuXPRuWo2hygQymGj6cwkf"],"license":"MIT"},"src/common/IEvents.sol":{"keccak256":"0x3d5f8db840075d593987d63e5d67b1108280c902041b5b471a1f31612dcdd269","urls":["bzz-raw://45ecb629ca134e26b040b68688e057c10356812183fbacbd37109e1d92d69467","dweb:/ipfs/QmQU7oCJKdM87Q6kw4kx9T5UkpZXsQ8eY26BQ1ozrmS3ki"],"license":"MIT"}},"version":1},"id":131}