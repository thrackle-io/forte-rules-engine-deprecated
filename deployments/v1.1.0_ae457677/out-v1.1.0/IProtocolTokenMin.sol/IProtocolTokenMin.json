{"abi":[{"type":"function","name":"connectHandlerToToken","inputs":[{"name":"_handlerAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getHandlerAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"connectHandlerToToken(address)":"71af85e0","getHandlerAddress()":"6f9c83b8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_handlerAddress\",\"type\":\"address\"}],\"name\":\"connectHandlerToToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHandlerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@ShaneDuncan602, @oscarsernarosero, @TJ-Everett, mpetersoCode55\",\"details\":\"Using this interface requires the implementing token properly handle the listed functions as well as insert the checkAllRules hook into _beforeTokenTransfer\",\"kind\":\"dev\",\"methods\":{\"connectHandlerToToken(address)\":{\"details\":\"Function to connect Token to previously deployed Handler contract\",\"params\":{\"_handlerAddress\":\"address of the currently deployed Handler Address\"}},\"getHandlerAddress()\":{\"details\":\"This function returns the handler address\",\"returns\":{\"_0\":\"handlerAddress\"}}},\"title\":\"Protocol Token Interface Minimal implementation model\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is the base contract for all protocol ERC20s\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/client/token/IProtocolTokenMin.sol\":\"IProtocolTokenMin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":diamond-std/=lib/diamond-std/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"src/client/token/IProtocolTokenMin.sol\":{\"keccak256\":\"0x04742ac2c57cef21366f3e71da21e8b746ed5ef892014590c93eed184d082f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8d6a7727e8aabe8d5f18c30bb0a0fbd84c30ad32ad4ed4ff737c3d1ddabddbe\",\"dweb:/ipfs/QmNRViwJr4cuxG3L6uYV3kszyyNWTSgtNt5Wcmo5d94Fcn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_handlerAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"connectHandlerToToken"},{"inputs":[],"stateMutability":"view","type":"function","name":"getHandlerAddress","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"connectHandlerToToken(address)":{"details":"Function to connect Token to previously deployed Handler contract","params":{"_handlerAddress":"address of the currently deployed Handler Address"}},"getHandlerAddress()":{"details":"This function returns the handler address","returns":{"_0":"handlerAddress"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","diamond-std/=lib/diamond-std/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/client/token/IProtocolTokenMin.sol":"IProtocolTokenMin"},"evmVersion":"paris","libraries":{}},"sources":{"src/client/token/IProtocolTokenMin.sol":{"keccak256":"0x04742ac2c57cef21366f3e71da21e8b746ed5ef892014590c93eed184d082f22","urls":["bzz-raw://c8d6a7727e8aabe8d5f18c30bb0a0fbd84c30ad32ad4ed4ff737c3d1ddabddbe","dweb:/ipfs/QmNRViwJr4cuxG3L6uYV3kszyyNWTSgtNt5Wcmo5d94Fcn"],"license":"MIT"}},"version":1},"id":159}