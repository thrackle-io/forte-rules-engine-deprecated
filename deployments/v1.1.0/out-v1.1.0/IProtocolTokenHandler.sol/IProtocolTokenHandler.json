{"abi":[{"type":"function","name":"checkAllRules","inputs":[{"name":"balanceFrom","type":"uint256","internalType":"uint256"},{"name":"balanceTo","type":"uint256","internalType":"uint256"},{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_sender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"checkAllRules(uint256,uint256,address,address,address,uint256)":"e802b523"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceFrom\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceTo\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"checkAllRules\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"@ShaneDuncan602 @oscarsernarosero @TJ-Everett\",\"details\":\"This interface provides the ABI for assets to access their handlers in an efficient way\",\"kind\":\"dev\",\"methods\":{\"checkAllRules(uint256,uint256,address,address,address,uint256)\":{\"details\":\"This function is the one called from the contract that implements this handler. It's the entry point to protocol.\",\"params\":{\"_from\":\"sender address\",\"_sender\":\"the address triggering the contract action\",\"_to\":\"recipient address\",\"balanceFrom\":\"token balance of sender address\",\"balanceTo\":\"token balance of recipient address\",\"value\":\"for ERC20s: the amount of tokens. For ERC721: the tokenId\"},\"returns\":{\"_0\":\"Success equals true if all checks pass\"}}},\"title\":\"Asset Handler Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/client/token/IProtocolTokenHandler.sol\":\"IProtocolTokenHandler\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":diamond-std/=lib/diamond-std/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\"]},\"sources\":{\"src/client/token/IProtocolTokenHandler.sol\":{\"keccak256\":\"0x4c893a9e42ecb37a757eba43b17ce1eee4bf154bc6dd11a8c606859cad41f56e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4a62cce21c94c94103dc386c0146cf7c5de3db3a2aa16dbce695d3d0493ac383\",\"dweb:/ipfs/QmVy814vc4PkvHBY9gGL8XtHg5oYdsr4eDbqeVA7vg3vHh\"]},\"src/common/ActionEnum.sol\":{\"keccak256\":\"0xf8fe73530657e33e73d4b86f10de47feb784dbb9c2b135c54de9a20ed2106bd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e013dd5adb2c8796cb2693d5e9361cb26aa62f6c5b1563c096a47a479db8de0d\",\"dweb:/ipfs/QmTEC2wEPmDi6TjYbNkPksDYLptfd7sppXyygAwfdDdhLN\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"balanceFrom","type":"uint256"},{"internalType":"uint256","name":"balanceTo","type":"uint256"},{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"checkAllRules","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"checkAllRules(uint256,uint256,address,address,address,uint256)":{"details":"This function is the one called from the contract that implements this handler. It's the entry point to protocol.","params":{"_from":"sender address","_sender":"the address triggering the contract action","_to":"recipient address","balanceFrom":"token balance of sender address","balanceTo":"token balance of recipient address","value":"for ERC20s: the amount of tokens. For ERC721: the tokenId"},"returns":{"_0":"Success equals true if all checks pass"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","diamond-std/=lib/diamond-std/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/client/token/IProtocolTokenHandler.sol":"IProtocolTokenHandler"},"evmVersion":"paris","libraries":{}},"sources":{"src/client/token/IProtocolTokenHandler.sol":{"keccak256":"0x4c893a9e42ecb37a757eba43b17ce1eee4bf154bc6dd11a8c606859cad41f56e","urls":["bzz-raw://4a62cce21c94c94103dc386c0146cf7c5de3db3a2aa16dbce695d3d0493ac383","dweb:/ipfs/QmVy814vc4PkvHBY9gGL8XtHg5oYdsr4eDbqeVA7vg3vHh"],"license":"UNLICENSED"},"src/common/ActionEnum.sol":{"keccak256":"0xf8fe73530657e33e73d4b86f10de47feb784dbb9c2b135c54de9a20ed2106bd7","urls":["bzz-raw://e013dd5adb2c8796cb2693d5e9361cb26aa62f6c5b1563c096a47a479db8de0d","dweb:/ipfs/QmTEC2wEPmDi6TjYbNkPksDYLptfd7sppXyygAwfdDdhLN"],"license":"MIT"}},"version":1},"id":158}