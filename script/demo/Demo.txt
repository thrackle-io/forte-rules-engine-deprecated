What has already been done:

1. Anvil started
2. Protocol Deployed
3. AppManager Deployed and configured
4. FrankensteinCoin Deployed and configured
5. Minted 1B coins
6. Created and applied Account Min/Max Token Balance rule

LIVE DEMO
1. Brief overview of Architecture
2. Explain Action Based Rules
3. Discuss setup steps for the demo


## transfer
cast send $APPLICATION_ERC20_1 "transfer(address,uint256)" $USER_1 100 --private-key $APP_ADMIN_1_KEY --from $APP_ADMIN_1

## check Token Balance
cast call $APPLICATION_ERC20_1 "balanceOf(address)(uint256)" $USER_1 --private-key $APP_ADMIN_1_KEY --from $APP_ADMIN_1 

## transferOverMax	
cast send $APPLICATION_ERC20_1 "transfer(address,uint256)" $USER_1 1 --private-key $APP_ADMIN_1_KEY --from $APP_ADMIN_1

## mintFranksToUser1
cast send $APPLICATION_ERC20_1 "mint(address,uint256)" $USER_1 100 --private-key $APP_ADMIN_1_KEY --from $APP_ADMIN_1

## applyRuleToMints
cast send $APPLICATION_ERC20_1_HANDLER "setAccountMinMaxTokenBalanceId(uint8[], uint32)" \[3\] 0 --private-key $APP_ADMIN_1_KEY --rpc-url $ETH_RPC_URL --from $APP_ADMIN_1

## check Token Balance
cast call $APPLICATION_ERC20_1 "balanceOf(address)(uint256)" $USER_1 --private-key $APP_ADMIN_1_KEY --from $APP_ADMIN_1 

## mintFranksToUser1OverMax
cast send $APPLICATION_ERC20_1 "mint(address,uint256)" $USER_1 100 --private-key $APP_ADMIN_1_KEY --from $APP_ADMIN_1

## deactivate the rule for transfers
cast send $APPLICATION_ERC20_1_HANDLER "activateAccountMinMaxTokenBalance(uint8[], bool)" \[0\] false --private-key $APP_ADMIN_1_KEY --from $APP_ADMIN_1

## transfer
cast send $APPLICATION_ERC20_1 "transfer(address,uint256)" $USER_1 100 --private-key $APP_ADMIN_1_KEY --from $APP_ADMIN_1
