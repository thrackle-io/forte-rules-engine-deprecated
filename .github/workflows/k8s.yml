name: K8s Build and Deploy

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: ${{ secrets.K8S_AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/universus-tf

jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.K8S_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.K8S_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set container tags
        run: |
          echo 'ANVIL_IMAGE_TAG=${{ env.ECR_REPOSITORY }}:anvil-${{ github.ref_name }}' >> $GITHUB_ENV
          echo 'TRON_IMAGE_TAG=${{ env.ECR_REPOSITORY }}:tron-${{ github.ref_name }}' >> $GITHUB_ENV
          echo 'TRON_TEST_TAG=${{ env.ECR_REPOSITORY }}:tron-${{ github.ref_name }}-test' >> $GITHUB_ENV
          echo 'FOUNDRY_BASE_TAG=${{ env.ECR_REPOSITORY }}:foundry-base' >> $GITHUB_ENV

      - name: Build and push foundry-base
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: foundry-base
          push: true
          tags: ${{ env.FOUNDRY_BASE_TAG }}
          cache-from: type=registry,ref=${{ env.FOUNDRY_BASE_TAG }}
          cache-to: type=inline

      - name: Build image to test tron deployment
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: deploy-tron
          load: true
          tags: ${{ env.TRON_TEST_TAG }}
          cache-from: type=registry,ref=${{ env.FOUNDRY_BASE_TAG }}
          cache-to: type=inline

      - name: Test Tron Deployment
        run: |
          docker run --rm ${{ env.TRON_TEST_TAG }} ./docker-scripts/deploy-tron.sh --with-deploy-check

      - name: Build and push Anvil
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: anvil
          push: true
          tags: ${{ env.ANVIL_IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.FOUNDRY_BASE_TAG }}
          cache-to: type=inline

      - name: Build and push Tron
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: deploy-tron
          push: true
          tags: ${{ env.TRON_IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.FOUNDRY_BASE_TAG }}
          cache-to: type=inline
